{"ast":null,"code":"var _jsxFileName = \"/Users/novruzamirov/Desktop/test/src/components/counter.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.value\n    };\n\n    this.handleIncrement = product => {\n      this.props.value = 0;\n      this.setState({\n        count: this.state.value + 1\n      });\n    };\n\n    this.doHandleIncrement = () => {\n      this.handleIncrement({\n        id: 1\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"50px\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: this.props.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  formatCount() {\n    const {\n      value: count\n    } = this.state;\n    return count === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 46\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/novruzamirov/Desktop/test/src/components/counter.jsx"],"names":["React","Counter","Component","state","value","props","handleIncrement","product","setState","count","doHandleIncrement","id","render","marginLeft","marginTop","formatCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACJC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AADd,KADyB;;AAAA,SAUjCE,eAViC,GAUdC,OAAD,IAAa;AAC3B,WAAKF,KAAL,CAAWD,KAAX,GAAmB,CAAnB;AACA,WAAKI,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAG,KAAKN,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACH,KAbgC;;AAAA,SAejCM,iBAfiC,GAeb,MAAM;AACtB,WAAKJ,eAAL,CAAqB;AAACK,QAAAA,EAAE,EAAG;AAAN,OAArB;AACH,KAjBgC;AAAA;;AAoBjCC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE,MAAb;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAAZ;AAAA,8BACI;AAAA,kBAAK,KAAKT,KAAL,CAAWM;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAQ,KAAKI,WAAL;AAAR;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKT,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAEDS,EAAAA,WAAW,GAAE;AACT,UAAM;AAACX,MAAAA,KAAK,EAAEK;AAAR,QAAiB,KAAKN,KAA5B;AACA,WAAOM,KAAK,KAAK,CAAV,gBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd,gBAA8B;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAArC;AACH;;AAlCgC;;AAqCrC,eAAeR,OAAf","sourcesContent":["import React from 'react';\n\nclass Counter extends React.Component{\n    state = {\n        value: this.props.value,\n    };\n\n    // constructor(){\n    //     super();\n    //     this.handleIncrement = this.handleIncrement.bind(this); \n    // }\n\n    handleIncrement = (product) => {\n        this.props.value = 0;\n        this.setState({count : this.state.value + 1})\n    }\n\n    doHandleIncrement = () => {\n        this.handleIncrement({id : 1});\n    }\n    \n\n    render(){\n        return(\n            <div style={{marginLeft: \"50px\", marginTop: \"20px\"}}>\n                <h4>{this.props.id}</h4>\n                <span >{this.formatCount()}</span>\n                <button onClick={this.handleIncrement}>Increment</button>\n            </div>\n           \n        )\n    }\n\n    formatCount(){\n        const {value: count} = this.state;\n        return count === 0 ? <h1>Zero</h1> : <h1>{count}</h1>;\n    }\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}